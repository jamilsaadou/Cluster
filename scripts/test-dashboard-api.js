#!/usr/bin/env node

/**
 * Script pour tester sp√©cifiquement l'API dashboard
 * Usage: node scripts/test-dashboard-api.js
 */

console.log('üîç TEST SP√âCIFIQUE API DASHBOARD');
console.log('=' .repeat(60));

console.log('\nüìã CONTEXTE:');
console.log('   ‚úÖ La connexion utilisateur fonctionne');
console.log('   ‚úÖ La base de donn√©es contient des utilisateurs');
console.log('   ‚ùì Le dashboard ne s\'affiche pas');
console.log('   üéØ Focus sur l\'API /api/dashboard/stats');

console.log('\nüß™ TESTS √Ä EFFECTUER:');

console.log('\n1. Test de l\'API dashboard avec curl:');
console.log(`
   # √âtape 1: Se connecter pour obtenir le cookie
   curl -X POST https://207.180.201.77/api/auth/login \\
     -H "Content-Type: application/json" \\
     -d '{"email":"admin@cluster.ne","password":"AdminCluster2025!"}' \\
     -c cookies.txt -v
   
   # √âtape 2: Tester l'API dashboard
   curl -X GET https://207.180.201.77/api/dashboard/stats \\
     -b cookies.txt -v
   
   # √âtape 3: Tester l'API auth/me pour comparaison
   curl -X GET https://207.180.201.77/api/auth/me \\
     -b cookies.txt -v
`);

console.log('\n2. Test dans le navigateur:');
console.log('   ‚Ä¢ Ouvrir DevTools (F12)');
console.log('   ‚Ä¢ Aller dans Network tab');
console.log('   ‚Ä¢ Recharger le dashboard');
console.log('   ‚Ä¢ Chercher la requ√™te vers /api/dashboard/stats');
console.log('   ‚Ä¢ V√©rifier le status code et la r√©ponse');

console.log('\n3. V√©rification des logs PM2:');
console.log('   # Surveiller les logs en temps r√©el');
console.log('   pm2 logs suivicluster --lines 0');
console.log('   ');
console.log('   # Puis recharger le dashboard dans le navigateur');
console.log('   # et observer les erreurs qui apparaissent');

console.log('\nüîç CAUSES PROBABLES (base non vide):');

console.log('\n   Cause 1: Erreur dans les requ√™tes Prisma');
console.log('   ‚Ä¢ Champs manquants dans la base');
console.log('   ‚Ä¢ Relations cass√©es entre tables');
console.log('   ‚Ä¢ Types de donn√©es incompatibles');

console.log('\n   Cause 2: Probl√®me de permissions utilisateur');
console.log('   ‚Ä¢ L\'utilisateur n\'a pas acc√®s aux donn√©es');
console.log('   ‚Ä¢ Filtrage par r√©gion/r√¥le qui retourne vide');
console.log('   ‚Ä¢ Probl√®me dans la logique de requireAuth');

console.log('\n   Cause 3: Erreur JavaScript dans l\'API');
console.log('   ‚Ä¢ Exception non catch√©e');
console.log('   ‚Ä¢ Probl√®me de parsing JSON');
console.log('   ‚Ä¢ Timeout sur les requ√™tes');

console.log('\n   Cause 4: Structure de donn√©es incompatible');
console.log('   ‚Ä¢ Champs JSON mal format√©s (operateurs, systemes, etc.)');
console.log('   ‚Ä¢ Donn√©es NULL non g√©r√©es');
console.log('   ‚Ä¢ Incoh√©rence dans les types');

console.log('\nüõ†Ô∏è SOLUTIONS CIBL√âES:');

console.log('\n   Solution 1: V√©rifier la structure des donn√©es');
console.log(`
   mysql -u username -p database_name -e "
   SELECT id, email, role, regions FROM User LIMIT 5;
   SELECT id, nom, regionId, operateurs, systemes FROM Site LIMIT 5;
   SELECT id, type, statut, beneficiaires FROM Activite LIMIT 5;
   "
`);

console.log('\n   Solution 2: Tester les requ√™tes Prisma individuellement');
console.log('   ‚Ä¢ Cr√©er un script de test pour chaque requ√™te');
console.log('   ‚Ä¢ V√©rifier les includes et relations');
console.log('   ‚Ä¢ Tester avec diff√©rents utilisateurs');

console.log('\n   Solution 3: Ajouter des logs d√©taill√©s dans l\'API');
console.log('   ‚Ä¢ Console.log avant chaque requ√™te Prisma');
console.log('   ‚Ä¢ V√©rifier les donn√©es retourn√©es');
console.log('   ‚Ä¢ Identifier o√π √ßa √©choue exactement');

console.log('\n   Solution 4: Simplifier temporairement l\'API');
console.log('   ‚Ä¢ Retourner des donn√©es statiques pour tester');
console.log('   ‚Ä¢ Ajouter les requ√™tes une par une');
console.log('   ‚Ä¢ Isoler le probl√®me');

console.log('\nüö® ACTIONS IMM√âDIATES:');

console.log('\n1. V√©rifier les logs PM2 pendant le chargement du dashboard:');
console.log('   pm2 logs suivicluster --lines 0');

console.log('\n2. Tester l\'API manuellement:');
console.log('   # Se connecter');
console.log('   curl -X POST https://207.180.201.77/api/auth/login \\');
console.log('     -H "Content-Type: application/json" \\');
console.log('     -d \'{"email":"admin@cluster.ne","password":"AdminCluster2025!"}\' \\');
console.log('     -c cookies.txt');
console.log('   ');
console.log('   # Tester dashboard API');
console.log('   curl -X GET https://207.180.201.77/api/dashboard/stats \\');
console.log('     -b cookies.txt');

console.log('\n3. V√©rifier les donn√©es utilisateur:');
console.log(`
   mysql -u username -p database_name -e "
   SELECT u.id, u.email, u.role, 
          GROUP_CONCAT(ur.regionId) as regions
   FROM User u 
   LEFT JOIN UserRegion ur ON u.id = ur.userId 
   WHERE u.email = 'admin@cluster.ne'
   GROUP BY u.id;"
`);

console.log('\n4. V√©rifier les donn√©es de base:');
console.log(`
   mysql -u username -p database_name -e "
   SELECT 
     (SELECT COUNT(*) FROM Site) as total_sites,
     (SELECT COUNT(*) FROM Activite) as total_activites,
     (SELECT COUNT(*) FROM Region) as total_regions;"
`);

console.log('\nüìä R√âPONSES ATTENDUES:');

console.log('\n   API /api/auth/me doit retourner:');
console.log('   {');
console.log('     "userId": 1,');
console.log('     "email": "admin@cluster.ne",');
console.log('     "role": "admin",');
console.log('     "regions": [1, 2, ...]');
console.log('   }');

console.log('\n   API /api/dashboard/stats doit retourner:');
console.log('   {');
console.log('     "totalSites": 10,');
console.log('     "totalActivities": 25,');
console.log('     "totalBeneficiaries": 150,');
console.log('     "activitiesByStatus": {...},');
console.log('     "regionDistribution": {...}');
console.log('   }');

console.log('\nüí° CONSEILS DE D√âBOGAGE:');
console.log('   ‚Ä¢ Si l\'API retourne 500: Erreur serveur, v√©rifier les logs');
console.log('   ‚Ä¢ Si l\'API retourne 401: Probl√®me d\'authentification');
console.log('   ‚Ä¢ Si l\'API retourne 200 mais donn√©es vides: Probl√®me de filtrage');
console.log('   ‚Ä¢ Si l\'API timeout: Requ√™te trop lente, optimiser');

console.log('\n' + '=' .repeat(60));
console.log('üèÅ Testez l\'API dashboard avec ces commandes');

// Afficher des informations sur l'environnement
console.log('\nüîß ENVIRONNEMENT ACTUEL:');
console.log('   NODE_ENV:', process.env.NODE_ENV || 'Non d√©fini');
console.log('   JWT_SECRET:', process.env.JWT_SECRET ? 'D√©fini' : 'Non d√©fini');
console.log('   DATABASE_URL:', process.env.DATABASE_URL ? 'D√©fini' : 'Non d√©fini');
